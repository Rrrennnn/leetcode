// 11.旋转数组的最小数字
//把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组 [3,4,5,1,2] 为 [1,2,3,4,5] 的一个旋转，该数组的最小值为1。  

// 示例 1：

// 输入：[3,4,5,1,2]
// 输出：1
// 示例 2：

// 输入：[2,2,2,0,1]
// 输出：0

// 思路：
// （遍历数组，找出最小值 pass）
// 二分法：
// 因为是旋转数组，前面的元素都大于等于后面的元素，最小的元素是分界线
// 指针指向左(i)右(j)两端，跟中间的数(索引m)作比较，不断缩小比较区间
// nums[m] > nums[j], 中间的数大于最后的数，那最小数一定在后半段，令 i = m + 1;
// nums[m] < nums[j], 中间的数小于最后的数，那最小数一定在前半段，令 j = m;
// nums[m] === nums[j], 无法判断，用 j = j - 1 来缩小范围

var minArray = function (nums) {
    var i = 0;
    var j = nums.length - 1;
    while (i < j) {
        var m = Math.floor((i + j) / 2);
        if (numbers[m] > numbers[j]) {
            i = m + 1;
        } else if (numbers[m] < numbers[j]) {
            j = m;
        } else {
            j = j - 1;
        }
    }
    return numbers[i];
};